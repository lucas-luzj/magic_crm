version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:17-alpine
    container_name: denwon-crm-db
    restart: always
    environment:
      POSTGRES_DB: denwon_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: Asia/Shanghai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crm-network

  # MinIO对象存储
  minio:
    image: minio/minio:latest
    container_name: denwon-crm-minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - crm-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: denwon-crm-backend
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/denwon_crm
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      TZ: Asia/Shanghai
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - crm-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: denwon-crm-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - crm-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: denwon-crm-nginx
    restart: always
    ports:
      - "443:443"
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - crm-network

volumes:
  postgres_data:
  minio_data:

networks:
  crm-network:
    driver: bridge